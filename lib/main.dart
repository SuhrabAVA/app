import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';

import 'admin_panel.dart';
import 'my_app.dart';
import 'modules/warehouse/warehouse_provider.dart';
import 'modules/warehouse/supplier_provider.dart';
import 'modules/personnel/personnel_provider.dart';
import 'modules/orders/orders_provider.dart';
import 'modules/production_planning/stage_provider.dart';
import 'modules/tasks/task_provider.dart';
import 'modules/analytics/analytics_provider.dart';

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // 1) –ó–∞–≥—Ä—É–∂–∞–µ–º .env
  await dotenv.load(fileName: ".env");

  // 2) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á–∏ –∏–∑ .env –µ—Å—Ç—å (–∏–Ω–∞—á–µ –ø–æ–∫–∞–∂–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
  final supabaseUrl = dotenv.env['SUPABASE_URL'];
  final supabaseAnon = dotenv.env['SUPABASE_ANON_KEY'];

  if (supabaseUrl == null || supabaseUrl.isEmpty || supabaseAnon == null || supabaseAnon.isEmpty) {
    runApp(const _EnvErrorApp(
      message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç SUPABASE_URL / SUPABASE_ANON_KEY –≤ .env',
    ));
    return;
  }

  // 3) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase (–≤–∞–∂–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ò–ú–ï–ù–ê –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∞ –Ω–µ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è!)
  await Supabase.initialize(
    url: supabaseUrl,
    anonKey: supabaseAnon,
  );

  // 4) –ê–≤—Ç–æ–≤—Ö–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–Ω—É–∂–µ–Ω –∏–∑-–∑–∞ RLS). –ï—Å–ª–∏ –≤ .env –µ—Å—Ç—å –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å ‚Äî –≤–æ–π–¥—ë–º.
  final authEmail = dotenv.env['AUTH_EMAIL'];
  final authPassword = dotenv.env['AUTH_PASSWORD'];
  final auth = Supabase.instance.client.auth;

  if (auth.currentUser == null &&
      authEmail != null && authEmail.isNotEmpty &&
      authPassword != null && authPassword.isNotEmpty) {
    try {
      await auth.signInWithPassword(email: authEmail, password: authPassword);
    } catch (e, st) {
      debugPrint('‚ùå Auth signInWithPassword error: $e\n$st');
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –Ω–µ –ø–∞–¥–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Å–µ—Å—Å–∏–∏:
      // runApp(const _EnvErrorApp(message: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ AUTH_EMAIL/AUTH_PASSWORD'));
      // return;
    }
  }

  // 5) –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Flutter (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Å—Ç–µ–∫)
  FlutterError.onError = (FlutterErrorDetails details) {
    FlutterError.presentError(details);
    // ignore: avoid_print
    print('üî• FLUTTER ERROR: ${details.exception}\n${details.stack}');
  };

  // 6) –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
  runApp(
    MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => WarehouseProvider()),
        ChangeNotifierProvider(create: (_) => PersonnelProvider()),
        ChangeNotifierProvider(create: (_) => OrdersProvider()),
        ChangeNotifierProvider(create: (_) => SupplierProvider()),
        ChangeNotifierProvider(create: (_) => StageProvider()),
        ChangeNotifierProvider(create: (_) => TaskProvider()),
        ChangeNotifierProvider(create: (_) => AnalyticsProvider()),
      ],
      child: const MyApp(),
    ),
  );
}

/// –ü—Ä–æ—Å—Ç–æ–π —ç–∫—Ä–∞–Ω —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –±–µ–ª–æ–≥–æ —ç–∫—Ä–∞–Ω–∞)
class _EnvErrorApp extends StatelessWidget {
  final String message;
  const _EnvErrorApp({super.key, required this.message});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: Padding(
            padding: const EdgeInsets.all(24.0),
            child: Text(
              message,
              textAlign: TextAlign.center,
              style: const TextStyle(fontSize: 16),
            ),
          ),
        ),
      ),
    );
  }
}
