import 'package:flutter/material.dart';

import 'type_table_tabs_screen.dart';
import 'suppliers_screen.dart';
import 'categories_hub_screen.dart';
import 'forms_screen.dart';
import 'warehouse_provider.dart';
import 'tmc_model.dart';
import 'package:provider/provider.dart';

/// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –º–æ–¥—É–ª—è ¬´–°–∫–ª–∞–¥¬ª.
/// –°–æ–¥–µ—Ä–∂–∏—Ç –ø–∞–Ω–µ–ª—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –Ω–∏–∑–∫–æ–º –æ—Å—Ç–∞—Ç–∫–µ –∏ –Ω–∞–±–æ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
/// –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–æ–¥–º–æ–¥—É–ª—è–º: –±—É–º–∞–≥–∞, –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—è, –∫—Ä–∞—Å–∫–∏, –Ω—É–º–µ—Ä–∞—Ü–∏–∏ (—Ñ–æ—Ä–º–∞), —Ä—É—á–∫–∏,
/// –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–∏–ø—ã) –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏.
class WarehouseDashboard extends StatelessWidget {
  const WarehouseDashboard({super.key});

  /// –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω [screen] —á–µ—Ä–µ–∑ Navigator.
  void _open(BuildContext context, Widget screen) {
    Navigator.push(context, MaterialPageRoute(builder: (_) => screen));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('–°–∫–ª–∞–¥')),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            // –ü–∞–Ω–µ–ª—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ –Ω–∏–∑–∫–æ–º –æ—Å—Ç–∞—Ç–∫–µ –¥–ª—è –±—É–º–∞–≥–∏ –∏ –∫—Ä–∞—Å–∫–∏.
            Consumer<WarehouseProvider>(
              builder: (context, provider, _) {
                final List<TmcModel> low = provider.allTmc.where((t) {
                  if (t.type == '–ë—É–º–∞–≥–∞') {
                    return t.quantity <= 10000;
                  } else if (t.type == '–ö—Ä–∞—Å–∫–∞') {
                    return t.quantity <= 10;
                  } else {
                    return false;
                  }
                }).toList();
                if (low.isEmpty) return const SizedBox.shrink();
                return Container(
                  margin: const EdgeInsets.only(bottom: 8),
                  padding: const EdgeInsets.all(8),
                  decoration: BoxDecoration(
                    color: Colors.yellow.shade50,
                    borderRadius: BorderRadius.circular(8),
                    border: Border.all(color: Colors.yellow.shade200),
                  ),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text('–ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫:', style: TextStyle(fontWeight: FontWeight.w600)),
                      const SizedBox(height: 4),
                      Wrap(
                        spacing: 4,
                        runSpacing: 4,
                        children: low.map((t) {
                          Color bg;
                          if (t.type == '–ë—É–º–∞–≥–∞') {
                            bg = t.quantity <= 5000 ? Colors.red.shade200 : Colors.yellow.shade200;
                          } else {
                            bg = t.quantity <= 5 ? Colors.red.shade200 : Colors.yellow.shade200;
                          }
                          return Container(
                            padding: const EdgeInsets.symmetric(horizontal: 6, vertical: 2),
                            decoration: BoxDecoration(
                              color: bg,
                              borderRadius: BorderRadius.circular(6),
                            ),
                            child: Text('${t.description}: ${t.quantity}${t.unit ?? ''}', style: const TextStyle(fontSize: 12)),
                          );
                        }).toList(),
                      ),
                    ],
                  ),
                );
              },
            ),
            Expanded(
              child: GridView.count(
                crossAxisCount: 3,
                crossAxisSpacing: 8,
                mainAxisSpacing: 8,
                childAspectRatio: 1,
                children: [
                  _card(context, 'üìÑ\n–ë—É–º–∞–≥–∞', const TypeTableTabsScreen(type: '–ë—É–º–∞–≥–∞', title: '–ë—É–º–∞–≥–∞')),
                  _card(context, '‚úèÔ∏è\n–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è', const TypeTableTabsScreen(type: '–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è', title: '–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è')),
                  _card(context, 'üé®\n–ö—Ä–∞—Å–∫–∏', const TypeTableTabsScreen(type: '–ö—Ä–∞—Å–∫–∞', title: '–ö—Ä–∞—Å–∫–∏', enablePhoto: true)),
                  _card(context, 'üßæ\n–§–æ—Ä–º–∞', const FormsScreen()),
                  _card(context, 'üñäÔ∏è\n–†—É—á–∫–∏', const TypeTableTabsScreen(type: '–†—É—á–∫–∏', title: '–†—É—á–∫–∏')),
                  _card(context, 'üì¶\n–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', const CategoriesHubScreen()),
                  _card(context, 'üè∑Ô∏è\n–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏', const SuppliersScreen()),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  /// –°—Ç—Ä–æ–∏—Ç –∫–∞—Ä—Ç–æ—á–∫—É —Å [title], –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç [page] –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏.
  Widget _card(BuildContext context, String title, Widget page) {
    return GestureDetector(
      onTap: () => _open(context, page),
      child: Container(
        decoration: BoxDecoration(
          color: Colors.lightBlue.shade50,
          borderRadius: BorderRadius.circular(12),
          border: Border.all(color: Colors.blueGrey.shade100),
        ),
        padding: const EdgeInsets.all(4),
        child: Center(
          child: Text(
            title,
            textAlign: TextAlign.center,
            style: const TextStyle(fontSize: 12, fontWeight: FontWeight.w600, height: 1.3),
          ),
        ),
      ),
    );
  }
}